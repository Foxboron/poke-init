/* uefi.pk - UEFI Specification.  */

/* Copyright (C) 2021 Morten Linderud */

/* This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

load "uefi-common.pk";
load "authenticode.pk";

type EFI_TIME =
  struct
  {
    /* // 1900 – 9999 */
    uint16 Year;

    /* // 1 – 12 */
    uint8 Month;

    /* // 1 – 31 */
    uint8 Day;

    /* // 0 – 23 */
    uint8 Hour;

    /* // 0 – 59 */
    uint8 Minute;

    /* // 0 – 59 */
    uint8 Second;

    uint8 Pad1;

    /* // 0 – 999,999,999 */
    /* Not really used */
    uint32 Nanosecond;

    /* // -1440 to 1440 or 2047 */
    /* Not really used */
    uint16 TimeZone;

    /* Not really used */
    uint8 Daylight;

    uint8 Pad2;

     method _print = void:
        {
            printf "%u16d-%u8d-%u8dT%u8d:%u8d:%u8d", Year, Month, Day, Hour, Minute, Second;
        }
};


type EFI_VARIABLE_AUTHENTICATION_2 =
  struct {
    EFI_TIME TimeStamp;
    WIN_CERTIFICATE_UEFI_GUID AuthInfo;
};

type EFI_SIGNATURE_LIST =
  struct {
    EFI_GUID SignatureType;
    offset<uint32,B> SignatureListSize;
    uint32 SignatureHeaderSize;
    offset<uint32,B> SignatureSize;
    uint8[SignatureHeaderSize] SignatureHeader;

    type Signature = 
    struct {
        EFI_GUID SignatureOwner;
        uint8[SignatureSize - SignatureOwner'size] SignatureData;
    };
    Signature[SignatureListSize/SignatureSize] Signatures;
  };

type DBX = 
  struct {
    EFI_VARIABLE_AUTHENTICATION_2 Auth;
    EFI_SIGNATURE_LIST[] lists;
  };
